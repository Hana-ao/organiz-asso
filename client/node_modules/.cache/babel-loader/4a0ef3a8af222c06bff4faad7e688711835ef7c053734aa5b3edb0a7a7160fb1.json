{"ast":null,"code":"var _jsxFileName = \"/home/shan92i/L3/L3/Web/ProjetWeb2024/projetv4/client/src/components/MainPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport '../styles/MainPage.css';\nimport NavigationPanel from \"./NavigationPanel\";\nimport SignIn from \"./SignIn\";\nimport Forum from \"./Forum\";\nimport ProfilePage from \"./ProfilePage\";\nimport AdminPanel from \"./AdminPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  const [isAdmin, setIsAdmin] = useState(false); // État pour isAdmin\n  const [currentPage, setCurrentPage] = useState(\"signin_page\"); //état permettant de spécifier la page courante\n  const [isConnected, setConnected] = useState(false); //état permettant de dire si l'user est connecté\n  const [currentUser, setCurrentUser] = useState(null);\n  function login(user) {\n    setCurrentPage(\"message_page\"); //la page courante est le forum\n    setConnected(true); //l'utilisateur est connecté\n    setCurrentUser(user);\n  }\n  function logout() {\n    setCurrentPage(\"signin_page\"); //la page courante celle de l'inscription\n    setConnected(false);\n  }\n  function handleSetIsAdmin(value) {\n    setIsAdmin(value);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentPage === \"signin_page\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signin-page\",\n      children: [/*#__PURE__*/_jsxDEV(SignIn, {\n        login: login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(NavigationPanel, {\n        login: login,\n        logout: logout,\n        isConnected: isConnected,\n        currentUser: currentUser,\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : currentPage === \"message_page\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-page\",\n      children: [isAdmin && /*#__PURE__*/_jsxDEV(AdminPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Forum, {\n        login: login,\n        logout: logout,\n        isConnected: isConnected,\n        currentUser: currentUser,\n        currentPage: currentPage,\n        setCurrentPage: setCurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(ProfilePage, {\n      setCurrentPage: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 18\n    }, this)\n  }, void 0, false);\n}\n_s(MainPage, \"POJuTQrZHyewEZLKRADOkYjHl7E=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["useState","NavigationPanel","SignIn","Forum","ProfilePage","AdminPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","MainPage","_s","isAdmin","setIsAdmin","currentPage","setCurrentPage","isConnected","setConnected","currentUser","setCurrentUser","login","user","logout","handleSetIsAdmin","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/shan92i/L3/L3/Web/ProjetWeb2024/projetv4/client/src/components/MainPage.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport '../styles/MainPage.css'\nimport NavigationPanel from \"./NavigationPanel\";\nimport SignIn from \"./SignIn\";\nimport Forum from \"./Forum\";\nimport ProfilePage from \"./ProfilePage\";\nimport AdminPanel from \"./AdminPanel\"\n\n\nfunction MainPage(){\n    const [isAdmin, setIsAdmin] = useState(false); // État pour isAdmin\n    const [currentPage, setCurrentPage] = useState(\"signin_page\"); //état permettant de spécifier la page courante\n    const [isConnected, setConnected] = useState(false); //état permettant de dire si l'user est connecté\n    const [currentUser, setCurrentUser] = useState(null);\n\n    function login(user){\n        setCurrentPage(\"message_page\"); //la page courante est le forum\n        setConnected(true); //l'utilisateur est connecté\n        setCurrentUser(user);\n    }\n\n    function logout(){\n        setCurrentPage(\"signin_page\"); //la page courante celle de l'inscription\n        setConnected(false);\n\n    }\n    function handleSetIsAdmin(value) {\n        setIsAdmin(value);\n    }\n\n   \n    return (\n        <>\n            \n            {/* si la page courante est \"signin_page\" on affiche login, sinon : signin */}\n            {currentPage === \"signin_page\" ? (\n\n                <div className=\"signin-page\">\n                    <SignIn login={login} />\n                    <NavigationPanel login={login} logout={logout} isConnected={isConnected} currentUser={currentUser} currentPage={currentPage} />\n                    \n                </div> \n            ) : (\n                currentPage === \"message_page\" ?\n                (<div className=\"message-page\">\n                    \n                    {/* le forum */}\n                    {isAdmin && <AdminPanel />}\n                    <Forum login={login} logout={logout} isConnected={isConnected} currentUser={currentUser} currentPage={currentPage} setCurrentPage={setCurrentPage} />\n                \n                </div>) : \n                (<ProfilePage setCurrentPage={setCurrentPage}/>)\n            )}\n        </>\n    );\n}\n\nexport default MainPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}