{"ast":null,"code":"var _jsxFileName = \"/home/shan92i/L3/L3/Web/ProjetWeb2024/projetv4/client/src/components/AdminPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AdminControls from \"./AdminControls\";\nimport AdminApprovalList from \"./AdminApprovalList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{/*import '../styles/AdminPanel.css';*/}\nfunction AdminPanel() {\n  _s();\n  // Exemple de données d'utilisateurs à approuver\n  const [usersToApprove, setUsersToApprove] = useState([{\n    id: 1,\n    username: 'User1'\n  }, {\n    id: 2,\n    username: 'User2'\n  }, {\n    id: 3,\n    username: 'User3'\n  }]);\n\n  // Fonction pour approuver un utilisateur\n  const handleApproveUser = userId => {\n    // Mettre à jour la liste des utilisateurs approuvés\n    const updatedUsers = usersToApprove.filter(user => user.id !== userId);\n    setUsersToApprove(updatedUsers);\n    // Ajouter la logique pour approuver l'utilisateur dans votre application\n  };\n\n  // Fonction pour rejeter un utilisateur\n  const handleRejectUser = userId => {\n    // Mettre à jour la liste des utilisateurs approuvés\n    const updatedUsers = usersToApprove.filter(user => user.id !== userId);\n    setUsersToApprove(updatedUsers);\n    // Ajouter la logique pour rejeter l'utilisateur dans votre application\n  };\n\n  // Fonction pour accorder les droits d'administration\n  const handleGrantAdmin = () => {\n    // Ajouter la logique pour accorder les droits d'administration dans votre application\n  };\n\n  // Fonction pour révoquer les droits d'administration\n  const handleRevokeAdmin = () => {\n    // Ajouter la logique pour révoquer les droits d'administration dans votre application\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Panel d'administration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AdminControls, {\n      onGrantAdmin: handleGrantAdmin,\n      onRevokeAdmin: handleRevokeAdmin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AdminApprovalList, {\n      usersToApprove: usersToApprove,\n      onApprove: handleApproveUser,\n      onReject: handleRejectUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminPanel, \"892wj9pauO/vO5ieDW8K1SFQOA0=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","AdminControls","AdminApprovalList","jsxDEV","_jsxDEV","AdminPanel","_s","usersToApprove","setUsersToApprove","id","username","handleApproveUser","userId","updatedUsers","filter","user","handleRejectUser","handleGrantAdmin","handleRevokeAdmin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onGrantAdmin","onRevokeAdmin","onApprove","onReject","_c","$RefreshReg$"],"sources":["/home/shan92i/L3/L3/Web/ProjetWeb2024/projetv4/client/src/components/AdminPanel.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport AdminControls from \"./AdminControls\";\nimport AdminApprovalList from \"./AdminApprovalList\";\n{/*import '../styles/AdminPanel.css';*/}\n\nfunction AdminPanel() {\n    // Exemple de données d'utilisateurs à approuver\n    const [usersToApprove, setUsersToApprove] = useState([\n        { id: 1, username: 'User1' },\n        { id: 2, username: 'User2' },\n        { id: 3, username: 'User3' }\n    ]);\n\n    // Fonction pour approuver un utilisateur\n    const handleApproveUser = (userId) => {\n        // Mettre à jour la liste des utilisateurs approuvés\n        const updatedUsers = usersToApprove.filter(user => user.id !== userId);\n        setUsersToApprove(updatedUsers);\n        // Ajouter la logique pour approuver l'utilisateur dans votre application\n    };\n\n    // Fonction pour rejeter un utilisateur\n    const handleRejectUser = (userId) => {\n        // Mettre à jour la liste des utilisateurs approuvés\n        const updatedUsers = usersToApprove.filter(user => user.id !== userId);\n        setUsersToApprove(updatedUsers);\n        // Ajouter la logique pour rejeter l'utilisateur dans votre application\n    };\n\n    // Fonction pour accorder les droits d'administration\n    const handleGrantAdmin = () => {\n        // Ajouter la logique pour accorder les droits d'administration dans votre application\n    };\n\n    // Fonction pour révoquer les droits d'administration\n    const handleRevokeAdmin = () => {\n        // Ajouter la logique pour révoquer les droits d'administration dans votre application\n    };\n\n    return (\n        <div className='admin-panel'>\n            {/* Contenu de votre panneau d'administration */}\n            <h2>Panel d'administration</h2>\n            {/* Ajoutez d'autres éléments et fonctionnalités ici */}\n            <AdminControls onGrantAdmin={handleGrantAdmin} onRevokeAdmin={handleRevokeAdmin} />\n            <AdminApprovalList usersToApprove={usersToApprove} onApprove={handleApproveUser} onReject={handleRejectUser} />\n        </div>\n    );\n}\n\nexport default AdminPanel;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpD,CAAC;AAED,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,CACjD;IAAES,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAQ,CAAC,EAC5B;IAAED,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAQ,CAAC,EAC5B;IAAED,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAQ,CAAC,CAC/B,CAAC;;EAEF;EACA,MAAMC,iBAAiB,GAAIC,MAAM,IAAK;IAClC;IACA,MAAMC,YAAY,GAAGN,cAAc,CAACO,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACN,EAAE,KAAKG,MAAM,CAAC;IACtEJ,iBAAiB,CAACK,YAAY,CAAC;IAC/B;EACJ,CAAC;;EAED;EACA,MAAMG,gBAAgB,GAAIJ,MAAM,IAAK;IACjC;IACA,MAAMC,YAAY,GAAGN,cAAc,CAACO,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACN,EAAE,KAAKG,MAAM,CAAC;IACtEJ,iBAAiB,CAACK,YAAY,CAAC;IAC/B;EACJ,CAAC;;EAED;EACA,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC3B;EAAA,CACH;;EAED;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B;EAAA,CACH;EAED,oBACId,OAAA;IAAKe,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAExBhB,OAAA;MAAAgB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE/BpB,OAAA,CAACH,aAAa;MAACwB,YAAY,EAAER,gBAAiB;MAACS,aAAa,EAAER;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnFpB,OAAA,CAACF,iBAAiB;MAACK,cAAc,EAAEA,cAAe;MAACoB,SAAS,EAAEhB,iBAAkB;MAACiB,QAAQ,EAAEZ;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9G,CAAC;AAEd;AAAClB,EAAA,CA3CQD,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AA6CnB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}